<Window x:Class="WpfExplorer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ViewModel="clr-namespace:WpfExplorer.ViewModel"
        xmlns:local="clr-namespace:WpfExplorer" xmlns:cmd="http://www.galasoft.ch/mvvmlight" 
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ignore="http://www.galasoft.ch/ignore"
        mc:Ignorable="ignore"
        Title="MainWindow" Height="720" Width="1280">
    <Window.DataContext>
        <ViewModel:MainWindowViewModel x:Name="mvm"></ViewModel:MainWindowViewModel>
    </Window.DataContext>

    <DockPanel LastChildFill="True" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">

        <Grid Background="#142880" DockPanel.Dock="Bottom" Width="Auto" Height="35">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="2*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid Grid.Column="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding db_connect_status}" Foreground="White" Margin="0 10 0 0" Grid.Column="0" Grid.Row="0" ></TextBlock>
                <Button Grid.Column="1" RenderTransformOrigin="0.5,0.6" Command="{Binding rotate_button}" Grid.Row="0" Background="Transparent" FontSize="35" BorderBrush="Blue" BorderThickness="0 0 0 0" Margin="0 -15 0 0" Foreground="White" Content="⟳" Height="55" Width="60" Cursor="Hand">
                    <Button.RenderTransform>
                        <RotateTransform x:Name="AnimatedRotateTransform" Angle="0"/>
                    </Button.RenderTransform>
                    <Button.Triggers>
                        <EventTrigger RoutedEvent="MouseLeftButtonDown" >
                            <BeginStoryboard>
                                <Storyboard x:Name="AnimationBoard">
                                    <DoubleAnimation Storyboard.TargetName="AnimatedRotateTransform" Storyboard.TargetProperty="Angle" From="0" To="360" Duration="10" FillBehavior="Stop" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Button.Triggers>
                </Button>
                <Button Grid.Column="2" Grid.Row="0" Background="Transparent" FontSize="25" BorderBrush="Blue" BorderThickness="0 0 0 0" Margin="0 -12 0 0" Foreground="White" Command="{Binding Syncbtn_Sync}" Content="{Binding PPbtn}" Height="55" Width="60" Cursor="Hand"/>
            </Grid>
            <TextBlock Grid.Column="1" Grid.Row="0" Text="{Binding Path=tb_DatenbankFiles, UpdateSourceTrigger=PropertyChanged}" Foreground="White" Margin="0 10 0 0" TextAlignment="Center"></TextBlock>
            <Grid Grid.Column="2" Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Grid.Row="0" Text="{Binding Path=tb_FoundFiles, UpdateSourceTrigger=PropertyChanged}" Foreground="White" Margin="0 10 10 0"  TextAlignment="Center"/>
                <TextBlock Grid.Column="1" Grid.Row="0" Text="{Binding Path=tb_IndizierteFiles, UpdateSourceTrigger=PropertyChanged}" Foreground="White" Margin="0 10 10 0"  TextAlignment="Center"/>
            </Grid>
        </Grid>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width=".5*" />
                <ColumnDefinition Width=".5*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height=".05*" />
                <RowDefinition Height=".8*" />
            </Grid.RowDefinitions>

            <!-- COL 0 | ROW 0-->
            <TextBlock Foreground="{Binding Color_tb_Ping}" Grid.Column="0" Grid.Row="0" Name="TB_Ping" Margin=" 0 5 0 0 " Text="{Binding tb_Ping_Text}"></TextBlock>
            <TextBlock Foreground="{Binding Color_tb_Ping}" Grid.Column="0" Grid.Row="0" Name="TB_PingTime" Margin="50 5 0 0"></TextBlock>

            <!-- COL 1 | ROW 0 -->
            <TextBlock Foreground="{Binding Color_SuchFeldLabel}" FontWeight="Bold" Grid.Column="1" Grid.Row="0" Name="TB_SearchText" Margin="0 4 0 0">Suchen Sie nach einem Dateinamen oder nach dem Inhalt einer Datei</TextBlock>

            <!-- COL 0 | ROW 1 -->
            <Grid Grid.Column="0" Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*" />
                </Grid.RowDefinitions>
                <ListBox Foreground="{Binding Color_FoundFiles}" MaxHeight="600" Grid.Row="6" Name="GD_Dateiausgabe" ItemsSource="{Binding FoundFiles}" SelectedItem="{Binding SelectedFile}" SelectionMode="Single" ScrollViewer.VerticalScrollBarVisibility="Auto">
                    <ListBox.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Aus Index entfernen" Command="{Binding RemoveFromDB}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}},
                                Path=PlacementTarget.SelectedItem}"/>
                        </ContextMenu>
                    </ListBox.ContextMenu>

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <i:InvokeCommandAction Command="{Binding MouseDoubleClick}" CommandParameter="{Binding ElementName=GD_Dateiausgabe, Path=SelectedItem}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ListBox>
            </Grid>

            <!-- COL 1 | ROW 1 :::: Note: Neues Grid damit man nicht für alle Elemente extra nen Margin angibt, sondern das sich automatisch ausrichtet. Dafür muss aber jede Row manuell hinzugefügt werden -->
            <Grid Grid.Column="1" Grid.Row="1" Height="Auto">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="25" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <TextBox Grid.Row="1" Text="{Binding Path=tb_Search_Text, UpdateSourceTrigger=PropertyChanged}" BorderBrush="{Binding Color_tb_Search}" HorizontalAlignment="Stretch" Name="tb_Search" Height="25" Foreground="{Binding Color_tb_Search}" BorderThickness="0,0,0,2" Cursor="IBeam"></TextBox>
                <Grid Grid.Row="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="10"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="10"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="10"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="10"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="10"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="10"/>
                    </Grid.ColumnDefinitions>
                    
                    <Button Name="IndexNewFiles" Command="{Binding Index_Click}" Grid.Row="1" Grid.Column="1" Foreground="White" Cursor="Hand">Neue Dateien indizieren</Button>
                    <Button Name="testbtn" Command="{Binding Settings_Click}"  Grid.Row="1" Grid.Column="3" Foreground="White" Cursor="Hand">Settings</Button>
                    <Button Foreground="White" Grid.Row="3" Grid.Column="1" Content="Hilfe" Command="{Binding _bt_Help}"/>
                    <Button Foreground="White" Grid.Row="3" Grid.Column="3" Content="Log Dateien" Command="{Binding _bt_Log}" Cursor="Hand"/>
                </Grid>
                
                <Label Foreground="{Binding Color_ExceptionLabel}" Grid.Row="3" FontWeight="Bold" Content="Dateien ausschließen"></Label>
                <TextBox Foreground="{Binding Color_tb_AddExceptions}" Grid.Row="4" BorderBrush="{Binding Color_tb_AddExceptions}" Name="tb_AddExceptions" Text="{Binding tb_AddExceptionsText}" BorderThickness="0,0,0,2">
                    <TextBox.InputBindings>
                        <KeyBinding Key="Return" Command="{Binding EnterKeyCommand}" CommandParameter="{Binding ElementName=tb_AddExceptions, Path=Text}"/>
                    </TextBox.InputBindings>
                </TextBox>
                
                <ListBox Foreground="{Binding Color_FileExceptionList}" Grid.Row="5" Name="lb_Exceptions" ItemsSource="{Binding FileExceptionList}" SelectedItem="{Binding SelectedFileException}" BorderThickness="1px" BorderBrush="{Binding Color_FileExceptionList}">
                    <ListBox.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Delete" Command="{Binding DeleteFileException}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}},
                                Path=PlacementTarget.SelectedItem}"/>
                        </ContextMenu>
                    </ListBox.ContextMenu>
                </ListBox>
                <!-- <TextBlock Foreground="White" Grid.Row="7" Text="{Binding IndexProgress}"></TextBlock> -->
            </Grid>
        </Grid>

    </DockPanel>
</Window>
